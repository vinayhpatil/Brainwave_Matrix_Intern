pip install requests beautifulsoup4

import re
import requests
from bs4 import BeautifulSoup
from urllib.parse import urlparse

def is_suspicious_url(url):
    # Check for IP address in the URL
    ip_pattern = re.compile(r'^(http[s]?://)?(\d{1,3}\.){3}\d{1,3}(:\d+)?(/|$)')
    if ip_pattern.match(url):
        return True

    # Check for long URLs
    if len(url) > 75:
        return True

    # Check for suspicious keywords in the URL
    suspicious_keywords = ["login", "verify", "update", "security", "ebayisapi", "banking", "secure"]
    if any(keyword in url for keyword in suspicious_keywords):
        return True

    return False

def fetch_page_content(url):
    try:
        response = requests.get(url, timeout=10)
        response.raise_for_status()  # Raise an exception for HTTP errors
        return response.text
    except requests.RequestException as e:
        print(f"Error fetching URL {url}: {e}")
        return None

def is_suspicious_content(content):
    # Check for forms requesting sensitive information
    soup = BeautifulSoup(content, 'html.parser')
    forms = soup.find_all('form')
    for form in forms:
        if any(keyword in form.text.lower() for keyword in ["password", "ssn", "credit card", "bank account"]):
            return True

    # Check for suspicious keywords in the HTML content
    suspicious_keywords = ["login", "verify", "update", "secure", "confirm", "account"]
    if any(keyword in content.lower() for keyword in suspicious_keywords):
        return True

    return False

def scan_url(url):
    print(f"Scanning URL: {url}")

    # Check URL characteristics
    if is_suspicious_url(url):
        print("Warning: URL is suspicious based on its characteristics.")
        return True

    # Fetch and analyze page content
    content = fetch_page_content(url)
    if content and is_suspicious_content(content):
        print("Warning: Page content is suspicious.")
        return True

    print("URL seems to be safe.")
    return False

# Test the scanner with a URL
test_url = "http://example-phishing-site.com/login"
scan_url(test_url)
